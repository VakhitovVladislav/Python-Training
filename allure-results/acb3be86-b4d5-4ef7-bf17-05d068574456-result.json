{"name": "test_add_group[None:name5;header]6'%l:n u;footer]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\n  Left contains one more item: None:name5;header]6'%l:n u;footer\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x00000230BB48FD60>\ndb = <fixture.db_helper.DbFixture object at 0x00000230BB48FE20>, json_groups = None:name5;header]6'%l:n u;footer\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add the group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old the list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\nE               Left contains one more item: None:name5;header]6'%l:n u;footer\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1624856845270, "stop": 1624856845271}, {"name": "When I add the group None:name5;header]6'%l:n u;footer to the list", "status": "passed", "start": 1624856845271, "stop": 1624856846520}, {"name": "Then the new group list is equal to the old the list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\n  Left contains one more item: None:name5;header]6'%l:n u;footer\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Users\\Shark\\PycharmProjects\\Python-treaning\\test\\test_add_group.py\", line 16, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1624856846520, "stop": 1624856846521}], "parameters": [{"name": "json_groups", "value": "None:name5;header]6'%l:n u;footer"}], "start": 1624856845270, "stop": 1624856846522, "uuid": "119f24cd-e887-41a2-a232-798744f437c6", "historyId": "944847875a80dcd2a952027e9ecd0633", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "LOLESYA"}, {"name": "thread", "value": "3664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}