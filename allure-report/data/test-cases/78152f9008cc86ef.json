{
  "uid" : "78152f9008cc86ef",
  "name" : "test_add_group[None:name5;header]6'%l:n u;footer]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "944847875a80dcd2a952027e9ecd0633",
  "time" : {
    "start" : 1624856845270,
    "stop" : 1624856846522,
    "duration" : 1252
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\n  Left contains one more item: None:name5;header]6'%l:n u;footer\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x00000230BB48FD60>\ndb = <fixture.db_helper.DbFixture object at 0x00000230BB48FE20>, json_groups = None:name5;header]6'%l:n u;footer\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add the group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old the list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\nE               Left contains one more item: None:name5;header]6'%l:n u;footer\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1624856836490,
      "stop" : 1624856845269,
      "duration" : 8779
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1624856836483,
      "stop" : 1624856836483,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1624856845270,
      "stop" : 1624856845270,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1624856836483,
      "stop" : 1624856836490,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\n  Left contains one more item: None:name5;header]6'%l:n u;footer\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x00000230BB48FD60>\ndb = <fixture.db_helper.DbFixture object at 0x00000230BB48FE20>, json_groups = None:name5;header]6'%l:n u;footer\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n         group = json_groups\n         with allure.step('Given a group list'):\n              old_groups = db.get_group_list()\n         with allure.step('When I add the group %s to the list' % group):\n              app.group.create(group)\n         with allure.step('Then the new group list is equal to the old the list with the added group'):\n              new_groups = db.get_group_list()\n              old_groups.append(group)\n>             assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE             AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\nE               Left contains one more item: None:name5;header]6'%l:n u;footer\nE               Use -v to get the full diff\n\ntest\\test_add_group.py:16: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1624856845270,
        "stop" : 1624856845271,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "When I add the group None:name5;header]6'%l:n u;footer to the list",
      "time" : {
        "start" : 1624856845271,
        "stop" : 1624856846520,
        "duration" : 1249
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Then the new group list is equal to the old the list with the added group",
      "time" : {
        "start" : 1624856846520,
        "stop" : 1624856846521,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [178:name_=+z...7uk`:#~8, ...] == [178:name_=+z...7uk`:#~8, ...]\n  Left contains one more item: None:name5;header]6'%l:n u;footer\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\Shark\\PycharmProjects\\Python-treaning\\test\\test_add_group.py\", line 16, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1624856852277,
      "stop" : 1624856853392,
      "duration" : 1115
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1624856852253,
      "stop" : 1624856852253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "LOLESYA"
  }, {
    "name" : "thread",
    "value" : "3664-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:name5;header]6'%l:n u;footer"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "78152f9008cc86ef.json",
  "parameterValues" : [ "None:name5;header]6'%l:n u;footer" ]
}